library(betareg)
library(broom)
library(car)
library(plyr)
library(dplyr)
library(emmeans)
library(ez)
library(fitdistrplus)
library(gplots)
library(ggplot2)
library(ggpubr)
library(languageR)
library(lme4)
library(lmtest)
library(logspline)
library(MASS)
library(multcompView)
library(nlme)
library(ordinal)
library(psy811)
library(psych)
library(rcompanion)
library(readr)
library(readxl)
library(rstatix)
library(stringr)
library(tidyr)
library(tidyselect)
library(tidyverse)
library(readxl)
library(readr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(ez)
library(lme4)
library(languageR)
library(car)
library(MASS)
library(fitdistrplus)
library(ordinal)
library(nlme)
library(logspline)
library(gplots)
library(stringr)
library(tidyr)
library(broom)
library(tidyselect)
library(tidyverse)
library(psy811)
library(mixedup)
########################################################
####  ADJUST PATH!!!!   ###############
setwd("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot2/results/preprocessed_data")
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/diagnostic_fcns.r")
source("C:/Arbeit/R statistics/boot_glmm.r")
source("C:/Arbeit/R statistics/helpers.r")
#### read preprocessed data ###########
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot2/results/preprocessed_data/data_t.csv", sep = ";")
#### Interpret judgment as numbers and context, tendency, condition A, condition B and list as a factors #####
data_t$judgment<-as.numeric(data_t$judgment)
data_t$cond_c<-as.factor(data_t$cond_c)
data_t$condA<-as.factor(data_t$condA)
data_t$condB<-as.factor(data_t$condB)
data_t$list <- as.factor(data_t$list)
data_t$tendency <- as.factor(data_t$tendency)
str(data_t)
data_t %>% group_by(cond_c) %>%
summarize(M = mean(judgment), SD = sd(judgment))
library(readxl)
library(readr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(ez)
library(lme4)
library(languageR)
library(car)
library(MASS)
library(fitdistrplus)
library(ordinal)
library(nlme)
library(logspline)
library(gplots)
library(stringr)
library(tidyr)
library(broom)
library(tidyselect)
library(tidyverse)
library(psy811)
library(mixedup)
#library(betareg)
#library(emmeans)
#library(lmtest)
#library(multcompView)
#library(psych)
#library(rcompanion)
#library(rstatix)
########################################################
setwd("C:/Arbeit/Expectedness/experiments/pretest/pilot3/results/preprocessed_data")
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/diagnostic_fcns.r")
source("C:/Arbeit/R statistics/boot_glmm.r")
source("C:/Arbeit/R statistics/helpers.r")
#### read coded data ###########
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data_t.csv", sep = ";")
#### Define types of columns in data_t
data_t$tendency <- as.factor(data_t$tendency)
data_t$judgment<-as.numeric(data_t$judgment)
data_t$cond_c<-as.factor(data_t$cond_c)
data_t$list <- as.factor(data_t$list)
str(data_t)
data_t %>% ggplot(aes(x = cond_c, y = judgment, fill = cond_c)) +
geom_boxplot() + theme_minimal() + labs(title = "Boxplot") + xlab("Number of context sentences") + ylab("Strength of preference")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
#plot
ggplot(means, aes(x=cond_c, y=Mean)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
labs(x='Number of context sentences', y='Mean rating', title='Mean rating by context condition')
#ggsave(f="../graphs/prior-ratings.pdf",height=5,width=8)+ facet_wrap(~target_no, nrow=2)
##### Plot means with error bars ######
#calculate means
means <-  data_t %>%
group_by(cond_c) %>%
summarize(Mean=mean(judgment),CILow=ci.low(judgment),CIHigh=ci.high(judgment))%>%
ungroup() %>%
mutate(YMin=Mean-CILow,YMax=Mean+CIHigh)
#plot
ggplot(means, aes(x=cond_c, y=Mean)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
labs(x='Number of context sentences', y='Mean rating', title='Mean rating by context condition')
#ggsave(f="../graphs/prior-ratings.pdf",height=5,width=8)+ facet_wrap(~target_no, nrow=2)
##### Plot counts of preferences per condition ######
#useful summary to plot frequencies
dt <- data_t %>% group_by(cond_c,tendency) %>% summarize(n=n()) %>% mutate(freq=n/sum(n))
# Barplot
ggplot(dt, aes(x=cond_c, fill = tendency, group = tendency)) +
geom_bar(aes(y=freq), stat="identity", position = "dodge") +
theme_minimal() +
labs(x='Number of context sentences', y='Count of preference', title='Counts of preferences per context condition') +
theme(plot.title = element_text(hjust=0.5, size=12, face='bold')) +
scale_fill_manual('Preference', values=c('darkorange', 'steelblue', 'deeppink4'))
# plot in grey
dt <- data_t %>% group_by(cond_c,tendency) %>% summarize(n=n()) %>% mutate(freq=n/sum(n))
# Barplot
ggplot(dt, aes(x=cond_c, fill = tendency, group = tendency)) +
geom_bar(aes(y=freq), stat="identity", position = "dodge") +
theme_minimal() +
labs(x='Number of context sentences', y='Count of preference', title='Counts of preferences per context condition') +
theme(plot.title = element_text(hjust=0.5, size=12, face='bold')) +
scale_fill_manual('Preference', values=c('grey77','grey44', 'grey14'))
#calculate means per item
means_target <-  data_t %>%
group_by(cond_c,target_no) %>%
summarize(Mean=mean(judgment),CILow=ci.low(judgment),CIHigh=ci.high(judgment))%>%
ungroup() %>%
mutate(YMin=Mean-CILow,YMax=Mean+CIHigh)
#plot means per item
ggplot(means_target, aes(x=cond_c, y=Mean)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
labs(x='Number of context sentences', y='Mean rating', title='Mean rating by context condition and item') +
facet_wrap(~target_no, nrow=2)
#ggsave(f="../graphs/prior-ratings.pdf",height=5,width=8)+ facet_wrap(~target_no, nrow=2)
model1a <- lmer(judgment ~ cond_c * list + (1 + cond_c|id), data = data_t)
summary(model1a)
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c + (1 + cond_c|id), data = data_t)
summary(model1a)
View(data_t)
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c + (1 + cond_c|id), data = data_t)
get_pvalues(model1a)
##### show the mean and standard deviation for the two conditions ##########
data_t %>% group_by(cond_c) %>%
summarize(M = mean(judgment), SD = sd(judgment))
##### show the mean and standard deviation for the two conditions ##########
data_t %>% group_by(cond_c) %>%
summarize(M = mean(judgment), SD = sd(judgment))
library(readxl)
library(readr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(ez)
library(lme4)
library(languageR)
library(car)
library(MASS)
library(fitdistrplus)
library(ordinal)
library(nlme)
library(logspline)
library(gplots)
library(stringr)
library(tidyr)
library(broom)
library(tidyselect)
library(tidyverse)
library(psy811)
library(mixedup)
########################################################
####  ADJUST PATH!!!!   ###############
setwd("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot2/results/preprocessed_data")
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/diagnostic_fcns.r")
source("C:/Arbeit/R statistics/boot_glmm.r")
source("C:/Arbeit/R statistics/helpers.r")
#### read preprocessed data ###########
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot2/results/preprocessed_data/data_t.csv", sep = ";")
#### Interpret judgment as numbers and context, tendency, condition A, condition B and list as a factors #####
data_t$judgment<-as.numeric(data_t$judgment)
data_t$cond_c<-as.factor(data_t$cond_c)
data_t$condA<-as.factor(data_t$condA)
data_t$condB<-as.factor(data_t$condB)
data_t$list <- as.factor(data_t$list)
data_t$tendency <- as.factor(data_t$tendency)
str(data_t)
data_t %>% group_by(cond_c) %>%
summarize(M = mean(judgment), SD = sd(judgment))
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c * list + (1 + cond_c|id), data = data_t)
?isSingular
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c + (1 + cond_c|id), data = data_t)
summary(model1a)
get_pvalues(model1a)
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c + list + (1 + cond_c|id), data = data_t)
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c + (1 + cond_c|id) + (1 + cond_c|target_no), data = data_t)
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c + (1 + cond_c|target_no), data = data_t)
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c + (1|id), data = data_t)
summary(model1a)
get_pvalues(model1a)
