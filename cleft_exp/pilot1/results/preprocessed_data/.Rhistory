library(stringr)
library(tidyr)
library(broom)
library(tidyselect)
library(tidyverse)
library(psy811)
library(mixedup)
#library(betareg)
#library(emmeans)
#library(lmtest)
#library(multcompView)
#library(psych)
#library(rcompanion)
#library(rstatix)
########################################################
setwd("C:/Arbeit/Expectedness/experiments/pretest/pilot3/results/preprocessed_data")
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/diagnostic_fcns.r")
source("C:/Arbeit/R statistics/boot_glmm.r")
source("C:/Arbeit/R statistics/helpers.r")
#### read coded data ###########
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data_t.csv", sep = ";")
#### Define types of columns in data_t
data_t$tendency <- as.factor(data_t$tendency)
data_t$judgment<-as.numeric(data_t$judgment)
data_t$cond_c<-as.factor(data_t$cond_c)
data_t$list <- as.factor(data_t$list)
str(data_t)
setwd("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data")
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/diagnostic_fcns.r")
source("C:/Arbeit/R statistics/boot_glmm.r")
source("C:/Arbeit/R statistics/helpers.r")
#### read preprocessed data ###########
data <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data.csv", sep = ";")
#### Interpret expectedness judgment as numbers and context, question and list as a factors #####
data$judgment<-as.numeric(data$judgment)
data$cond_c<-as.factor(data$cond_c)
data$condA<-as.factor(data$condA)
data$condB<-as.factor(data$condB)
data$list <- as.factor(data$list)
str(data)
# code preference: cleft vs. canonical
#add column for tendency:
#If cleft is better than canonical -> cleft
#If canonical is better than cleft -> canonical
#If they are the same -> equal
data_tendency <- data %>% mutate(tendency = case_when(
(judgment < 0) ~ "canonical",
(judgment > 0) ~ "cleft",
(judgment == 0) ~ "equal",
))
#Define types of columns in data_tendency
data_tendency$tendency <- as.factor(data_tendency$tendency)
data_tendency$judgment<-as.numeric(data_tendency$judgment)
data_tendency$cond_c<-as.factor(data_tendency$cond_c)
data_tendency$list <- as.factor(data_tendency$list)
#Save dataset including tendency.
#This will be the input for graphs
write.table(data_tendency, file="C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data_t.csv", row.names = FALSE, col.names = TRUE, sep = ";")
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data_t.csv", sep = ";")
library(readxl)
library(readr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(ez)
library(lme4)
library(languageR)
library(car)
library(MASS)
library(fitdistrplus)
library(ordinal)
library(nlme)
library(logspline)
library(gplots)
library(stringr)
library(tidyr)
library(broom)
library(tidyselect)
library(tidyverse)
library(psy811)
library(mixedup)
#library(betareg)
#library(emmeans)
#library(lmtest)
#library(multcompView)
#library(psych)
#library(rcompanion)
#library(rstatix)
########################################################
setwd("C:/Arbeit/Expectedness/experiments/pretest/pilot3/results/preprocessed_data")
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/diagnostic_fcns.r")
source("C:/Arbeit/R statistics/boot_glmm.r")
source("C:/Arbeit/R statistics/helpers.r")
#### read coded data ###########
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data_t.csv", sep = ";")
#### Define types of columns in data_t
data_t$tendency <- as.factor(data_t$tendency)
data_t$judgment<-as.numeric(data_t$judgment)
data_t$cond_c<-as.factor(data_t$cond_c)
data_t$list <- as.factor(data_t$list)
str(data_t)
## Plot of means
data_t %>% ggplot(aes(x = cond_c, y = judgment, fill = cond_c)) +
geom_boxplot() + theme_minimal() + labs(title = "Boxplot") + xlab("Number of context sentences") + ylab("Strength of preference")  + guides(fill = guide_legend(title = "Context")) +
scale_fill_brewer(palette = 'PuOr')
#calculate means
means <-  data_t %>%
group_by(cond_c) %>%
summarize(Mean=mean(judgment),CILow=ci.low(judgment),CIHigh=ci.high(judgment))%>%
ungroup() %>%
mutate(YMin=Mean-CILow,YMax=Mean+CIHigh)
ggplot(means, aes(x=cond_c, y=Mean)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")
#ggsave(f="../graphs/prior-ratings.pdf",height=5,width=8)
dtb <- ddply(data_t, .(id, cond_c), summarise,
Bewertung.mean=mean(judgment))
### plot means aggregiert
plotmeans(dtb$Bewertung.mean ~ dtb$cond_c,xlab="Context condition",
ylab="Mean Judgment", main="Mean Plot\nwith 95% CI")
###plot means nicht aggregiert
plotmeans(data_t$judgment ~ data_t$cond_c,xlab="Context condition",
ylab="Mean Judgment", main="Mean Plot\nwith 95% CI")
#### model 1 -- Without random effects
model1 <- lm(judgment ~ cond_c, data = data_t)
### Sanity check of model 1 #####
summary(model1)
anova(model1a,model1b)
#### model 1a -- With varying intercepts and slopes for participant + list as fixed effect interaction
model1a <- lmer(judgment ~ cond_c * list + (1 + cond_c|id), data = data_t)
#### model 1b -- With varying intercepts and slopes for participant + list as fixed effect
model1b <- lmer(judgment ~ cond_c + list + (1 + cond_c|id), data = data_t)
anova(model1a,model1b)
#### model 2 -- With varying intercepts and slopes for participant
model2 <- lmer(judgment ~ cond_c + (1 + cond_c|id), data = data_t)
anova(model1b,model2)
#### model 2 -- With varying intercepts and slopes for participant
model2 <- lmer(judgment ~ cond_c + (1 + cond_c|id), data = data_t)
anova(model1a,model2)
anova(model1b,model2)
model2 <- lmer(judgment ~ cond_c + (1 + cond_c|id), (1 + cond_c|target_no), data = data_t)
#### model 2 -- With varying intercepts and slopes for participant
model1c <- lmer(judgment ~ cond_c + (1 + cond_c|id) + (1 + cond_c|target_no), data = data_t)
#### model 2a -- With varying intercepts and slopes for item
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c * list + (1 + cond_c|target_no), data = data_t)
#### model 1b -- With varying intercepts and slopes for participant + list as fixed effect
model1b <- lmer(judgment ~ cond_c + list + (1 + cond_c|target_no), data = data_t)
#### model 2a -- With varying intercepts and slopes for item
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c + (1 + cond_c|target_no), data = data_t)
#### model 2a -- With varying intercepts for participant
#+ context condition and list as fixed effects interaction
model2a <- lmer(judgment ~ cond_c * list + (1|id), data = data_t)
anova(model2a,model1a) #If significant, keep interaction of list and context condition
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c * list + (1 + cond_c|id), data = data_t)
#### model 1a -- With varying intercepts and slopes for participant
#+ context condition and list as fixed effects interaction
#item as random effect doesn't make sense because not all items were seen by all subjects
model1a <- lmer(judgment ~ cond_c * list + (1 + cond_c|id), data = data_t)
summary(model1a)
get_pvalues(model1a)
### Sanity check of model 1a ######
#<10 is reasonable collinearity, <30 is moderate collinearity, over 30 is troubling
kappa.mer(model1a)   ## good!
#vif over 5 is troubling, over 2.5 is moderate (checks collinearity)
max(vif.mer(model1a)) ## good (checks collinearity)
# dispersion parameter should not be much larger than 1
overdisp.test(model1a) ## not good!
# residuals should be normally distributed, qq-plot plot should not show strong deviations from the line,
# residuals against fitted values should show a rather random pattern
diagnostics.plot(model1a) ## good!
#lev.thresh should be close to 0, means that there are no influential cases
lev.thresh(model1a) ## good.
View(liste1)
ggplot(means, aes(x=cond_c, y=Mean)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")+ facet_wrap(~target_no, nrow=2)
#ggsave(f="../graphs/prior-ratings.pdf",height=5,width=8)+ facet_wrap(~target_no, nrow=2)
means <-  data_t %>%
group_by(cond_c) %>%
summarize(Mean=mean(judgment),CILow=ci.low(judgment),CIHigh=ci.high(judgment))%>%
ungroup() %>%
mutate(YMin=Mean-CILow,YMax=Mean+CIHigh)
View(means)
View(means)
means_target <-  data_t %>%
group_by(cond_c,target_no) %>%
summarize(Mean=mean(judgment),CILow=ci.low(judgment),CIHigh=ci.high(judgment))%>%
ungroup() %>%
mutate(YMin=Mean-CILow,YMax=Mean+CIHigh)
View(means_target)
#plot
ggplot(means_target, aes(x=cond_c, y=Mean)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")+ facet_wrap(~target_no, nrow=2)
View(liste4)
ggplot(means_target, aes(x=cond_c, y=Mean)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")+ facet_wrap(~target_no, nrow=2)
#ggsave(f="../graphs/prior-ratings.pdf",height=5,width=8)+ facet_wrap(~target_no, nrow=2)
ggplot(means, aes(x=cond_c, y=Mean)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")
library(readxl)
library(readr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(ez)
library(lme4)
library(languageR)
library(car)
library(MASS)
library(fitdistrplus)
library(ordinal)
library(nlme)
library(logspline)
library(gplots)
library(stringr)
library(tidyr)
library(broom)
library(tidyselect)
library(tidyverse)
library(psy811)
library(mixedup)
#library(betareg)
#library(emmeans)
#library(lmtest)
#library(multcompView)
#library(psych)
#library(rcompanion)
#library(rstatix)
########################################################
setwd("C:/Arbeit/Expectedness/experiments/pretest/pilot3/results/preprocessed_data")
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/diagnostic_fcns.r")
source("C:/Arbeit/R statistics/boot_glmm.r")
source("C:/Arbeit/R statistics/helpers.r")
#### read coded data ###########
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data_t.csv", sep = ";")
#### Define types of columns in data_t
data_t$tendency <- as.factor(data_t$tendency)
data_t$judgment<-as.numeric(data_t$judgment)
data_t$cond_c<-as.factor(data_t$cond_c)
data_t$list <- as.factor(data_t$list)
str(data_t)
#### Plot means with error bars ######
#calculate means
means <-  data_t %>%
group_by(cond_c) %>%
summarize(Mean=mean(judgment),CILow=ci.low(judgment),CIHigh=ci.high(judgment))%>%
ungroup() %>%
mutate(YMin=Mean-CILow,YMax=Mean+CIHigh)
#plot
ggplot(means, aes(x=cond_c, y=Mean)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")
#ggsave(f="../graphs/prior-ratings.pdf",height=5,width=8)+ facet_wrap(~target_no, nrow=2)
barplot(data_t$tendency)
View(data_t)
plot(data_t$tendency)
ggplot(data_t$tendency, aes(x=cond_c, y=tendency)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_bar() +
#scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
#scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")
#+ facet_wrap(~target_no, nrow=2)
ggplot(data_t, aes(x=cond_c, y=tendency)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_bar() +
#scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
#scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")
#+ facet_wrap(~target_no, nrow=2)
#plot frequency of cleft preference per condition
ggplot(data_t, aes(x=cond_c, y=tendency)) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_bar() +
#scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
#scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
#geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")
ggplot(data_t, aes(x = tendency, colour = cond_c)) +
geom_freqpoly(binwidth = 50)
#plot frequency of cleft preference per condition
ggplot(data_t$tendency, aes(x = cond_c)) +  geom_bar()
#### Define types of columns in data_t
data_t$tendency <- as.numeric(data_t$tendency)
View(data_t)
#### Define types of columns in data_t
data_t$tendency <- as.factor(data_t$tendency)
View(data_t)
#### Define types of columns in data_t
data_t$tendency <- as.factor(data_t$tendency)
View(data_t)
#### read coded data ###########
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data_t.csv", sep = ";")
View(data_t)
#### Define types of columns in data_t
data_t$tendency <- as.numeric(data_t$tendency)
View(data_t)
#### Define types of columns in data_t
data_t$tendency <- as.numeric(data_t$tendency)
View(data)
View(data_t)
#### read coded data ###########
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data_t.csv", sep = ";")
#### Define types of columns in data_t
data_t$tendency <- as.factor(data_t$tendency)
#### Define types of columns in data_t
data_t$tendency <- as.numeric(data_t$tendency)
View(data_t)
#plot frequency of cleft preference per condition
ggplot(data_t$tendency, aes(x = cond_c)) +  geom_bar()
#### read coded data ###########
data_t <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data_t.csv", sep = ";")
data_t$judgment<-as.numeric(data_t$judgment)
data_t$cond_c<-as.factor(data_t$cond_c)
data_t$list <- as.factor(data_t$list)
str(data_t)
View(data_t)
library(readxl)
library(readr)
library(ggplot2)
library(ggpubr)
library(plyr)
library(dplyr)
library(ez)
library(lme4)
library(languageR)
library(car)
library(MASS)
library(fitdistrplus)
library(ordinal)
library(nlme)
library(logspline)
library(gplots)
library(stringr)
library(tidyr)
library(broom)
library(tidyselect)
library(tidyverse)
library(psy811)
library(mixedup)
#library(betareg)
#library(emmeans)
#library(lmtest)
#library(multcompView)
#library(psych)
#library(rcompanion)
#library(rstatix)
########################################################
####  ADJUST PATH!!!!   ###############
setwd("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data")
source("C:/Arbeit/R statistics/mer-utils.r")
source("C:/Arbeit/R statistics/regression-utils.r")
source("C:/Arbeit/R statistics/diagnostic_fcns.r")
source("C:/Arbeit/R statistics/boot_glmm.r")
source("C:/Arbeit/R statistics/helpers.r")
#### read preprocessed data ###########
data <- read.csv("C:/Arbeit/Expectedness/experiments/cleft_exp/pilot1/results/preprocessed_data/data.csv", sep = ";")
#### Interpret expectedness judgment as numbers and context, question and list as a factors #####
data$judgment<-as.numeric(data$judgment)
data$cond_c<-as.factor(data$cond_c)
data$condA<-as.factor(data$condA)
data$condB<-as.factor(data$condB)
data$list <- as.factor(data$list)
str(data)
# code preference: cleft vs. canonical
#add column for tendency:
#If cleft is better than canonical -> cleft
#If canonical is better than cleft -> canonical
#If they are the same -> equal
data_tendency <- data %>% mutate(tendency = case_when(
(judgment < 0) ~ "canonical",
(judgment > 0) ~ "cleft",
(judgment == 0) ~ "equal",
))
#Define types of columns in data_tendency
data_tendency$judgment<-as.numeric(data_tendency$judgment)
data_tendency$cond_c<-as.factor(data_tendency$cond_c)
data_tendency$list <- as.factor(data_tendency$list)
#plot frequency of cleft preference per condition
ggplot(data_t, aes(x=cond_c, y=count(tendency))) +
#geom_point(data=subjmeans,aes(fill=itemType,color=itemType),shape=21,alpha=.05) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+#,labels=c("lower probability","higher probability"),name="Fact") +
scale_fill_manual(values=c("red1"))+ #labels=c("lower probability","higher probability"),name="Fact") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels= c("0",".2",".4",".6",".8","1")) +
#scale_color_manual(name="Fact", breaks=c("lower probability","higher probability"),labels=c("lower probability","higher probability"),
# values=c("#56B4E9","#E69F00")) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
#theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 75, hjust = 1)) +
# coord_flip() +
ylab("Mean rating") +
xlab("Context condititon")
#### Define types of columns in data_t
data_t$tendency <- as.factor(data_t$tendency)
ggplot(data_t, aes(x=cond_c, y=count(tendency))) +
geom_point(stroke=.5,size=3,color="black") +
scale_shape_manual(values=c(21))+
scale_fill_manual(values=c("red1"))+
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.15) +
theme(legend.position = "top", legend.text=element_text(size=12)) +
ylab("Mean rating") +
xlab("Context condititon")
